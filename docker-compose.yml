version: '3.8'

services:
    dev:
        container_name: ${APP_NAME}_${MICROSERVICE_NAME}
        image: nestjs-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:dev
        ports:
            - ${EXT_PORT}:${PORT}
            - ${EXT_PORT_TCP}:${PORT_TCP}
        networks:
            - microservice
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on: ["db"]

    prod:
        container_name: ${APP_NAME}_${MICROSERVICE_NAME}
        image: nestjs-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - ${EXT_PORT}:${PORT}
            - ${EXT_PORT_TCP}:${PORT_TCP}
        networks:
            - microservice
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on: ["db"]

    db:
        container_name: ${APP_NAME}_db_users
        image: mariadb
        restart: always
        volumes:
            - ./docker-compose/db/data:/var/lib/mysql:rw,delegated
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            - '33006:3306'
        networks:
            - microservice

volumes:
  db:

networks:
    microservice:
        name: microservice-network
        external: true